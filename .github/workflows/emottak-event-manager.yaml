name: Deploy eMottak Event Manager

on:
  workflow_dispatch:
  push:
    branches:
    - main

jobs:
  build-and-push:
    name: Build and push Docker container
    runs-on: ubuntu-latest
    permissions:
      contents: "read"
      id-token: "write"
    steps:
      - uses: actions/checkout@v4
      - name: Branch name
        run: echo running on branch ${GITHUB_REF##*/}
      - name: Setup java
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: "temurin"
      - name: set timezone
        uses: szenius/set-timezone@v1.0
        with:
          timezoneLinux: "Europe/Oslo"
      - name: Cache gradle wrapper
        uses: actions/cache@v3
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-cache-${{ hashFiles('build.gradle') }}
          restore-keys: |
              ${{ runner.os }}-gradle-cache-
      - name: "Build and tests"
        run: ./gradlew test build
        env:
          ORG_GRADLE_PROJECT_githubUser: x-access-token
          ORG_GRADLE_PROJECT_githubPassword: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker build and push emottak-event-manager
        uses: nais/docker-build-push@v0
        id: docker-emottak-event-manager
        with:
          team: team-emottak # required
          salsa: true
          tag: ${{ github.sha }}
          dockerfile: Dockerfile # optional, default Dockerfile
          image_suffix: emottak-event-manager
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }} # required, but is defined as an organization variable
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }} # required, but is defined as an organization secret
    outputs:
        image: ${{ steps.docker-emottak-event-manager.outputs.image }}
  deploy-emottak-event-manager:
    name: Deploy emottak-event-manager til dev-milj√∏
    needs: build-and-push
    permissions:
      contents: "read"
      id-token: "write"
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: nais/deploy/actions/deploy@v2
      env:
        CLUSTER: dev-fss
        RESOURCE: .nais/emottak-event-manager-dev.yaml
        VAR: image=${{ needs.build-and-push.outputs.image }}
